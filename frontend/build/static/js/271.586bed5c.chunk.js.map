{"version":3,"file":"static/js/271.586bed5c.chunk.js","mappings":"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","sources":["components/admin/ProductsManager.tsx","components/admin/SuppliersManager.tsx","components/admin/ProductImporter.tsx","components/admin/AnalyticsDashboard.tsx","components/admin/ImprovedAdminDashboard.tsx","pages/AdminPage.tsx"],"sourcesContent":["// frontend/src/components/admin/ProductsManager.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description: string | null;\r\n  basePrice: number;\r\n  category_name?: string;\r\n  category?: { name: string };\r\n  isActive: boolean;\r\n  isFeatured: boolean;\r\n  stockCount: number;\r\n  images: any[];\r\n  variants: any[];\r\n  createdAt: string;\r\n  compatibility?: string[];\r\n}\r\n\r\ninterface ProductsManagerProps {\r\n  adminToken: string;\r\n}\r\n\r\nconst ProductsManager: React.FC<ProductsManagerProps> = ({ adminToken }) => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n  }, []);\r\n\r\n  const loadProducts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Enviar token de admin para ver TODOS los productos (incluidos inactivos)\r\n      const response = await axios.get(`${API_URL}/products?limit=100`, {\r\n        headers: { Authorization: `Bearer ${adminToken}` }\r\n      });\r\n      setProducts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error loading products:', error);\r\n      toast.error('Error al cargar productos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (productId: string) => {\r\n    if (!window.confirm('¿Estás seguro de desactivar este producto?')) return;\r\n\r\n    try {\r\n      await axios.delete(`${API_URL}/products/${productId}`, {\r\n        headers: { Authorization: `Bearer ${adminToken}` }\r\n      });\r\n      toast.success('Producto desactivado');\r\n      loadProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      toast.error('Error al desactivar producto');\r\n    }\r\n  };\r\n\r\n  const handleToggleFeatured = async (product: Product) => {\r\n    try {\r\n      await axios.put(\r\n        `${API_URL}/products/${product.id}`,\r\n        { isFeatured: !product.isFeatured },\r\n        { headers: { Authorization: `Bearer ${adminToken}` } }\r\n      );\r\n      toast.success(product.isFeatured ? 'Removido de destacados' : 'Marcado como destacado');\r\n      loadProducts();\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      toast.error('Error al actualizar producto');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n        <p className=\"mt-4 text-gray-600\">Cargando productos...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Gestión de Productos</h2>\r\n          <p className=\"text-gray-600\">{products.length} productos en total</p>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowCreateModal(true)}\r\n          className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 font-medium flex items-center\"\r\n        >\r\n          <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n          </svg>\r\n          Crear Producto\r\n        </button>\r\n      </div>\r\n\r\n      {/* Products Table */}\r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Producto\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Precio\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Stock\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Variantes\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Estado\r\n                </th>\r\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Acciones\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {products.map((product) => (\r\n                <tr key={product.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"h-12 w-12 flex-shrink-0\">\r\n                        {product.images[0] ? (\r\n                          <img\r\n                            className=\"h-12 w-12 rounded object-cover\"\r\n                            src={product.images[0].url}\r\n                            alt={product.name}\r\n                          />\r\n                        ) : (\r\n                          <div className=\"h-12 w-12 bg-gray-200 rounded flex items-center justify-center\">\r\n                            <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                            </svg>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"ml-4\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{product.name}</div>\r\n                        <div className=\"text-sm text-gray-500\">{product.category_name}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-semibold text-gray-900\">\r\n                      ${typeof product.basePrice === 'number' ? product.basePrice.toFixed(2) : parseFloat(String(product.basePrice)).toFixed(2)}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{product.stockCount}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{product.variants.length}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex flex-col space-y-1\">\r\n                      {product.isActive ? (\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                          Activo\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                          Inactivo\r\n                        </span>\r\n                      )}\r\n                      {product.isFeatured && (\r\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\r\n                          ⭐ Destacado\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                    <div className=\"flex justify-end space-x-2\">\r\n                      <button\r\n                        onClick={() => setSelectedProduct(product)}\r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                        title=\"Ver detalles\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                        </svg>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setEditingProduct(product)}\r\n                        className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        title=\"Editar\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                        </svg>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleToggleFeatured(product)}\r\n                        className=\"text-yellow-600 hover:text-yellow-900\"\r\n                        title={product.isFeatured ? 'Quitar de destacados' : 'Marcar como destacado'}\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill={product.isFeatured ? 'currentColor' : 'none'} stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n                        </svg>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDelete(product.id)}\r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                        title=\"Desactivar\"\r\n                      >\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {products.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <svg className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\r\n            </svg>\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No hay productos</h3>\r\n            <p className=\"text-gray-500 mb-4\">Comienza creando tu primer producto</p>\r\n            <button\r\n              onClick={() => setShowCreateModal(true)}\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700\"\r\n            >\r\n              Crear Producto\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {showCreateModal && (\r\n        <ProductFormModal\r\n          adminToken={adminToken}\r\n          onClose={() => setShowCreateModal(false)}\r\n          onSuccess={() => {\r\n            setShowCreateModal(false);\r\n            loadProducts();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {editingProduct && (\r\n        <ProductFormModal\r\n          adminToken={adminToken}\r\n          product={editingProduct}\r\n          onClose={() => setEditingProduct(null)}\r\n          onSuccess={() => {\r\n            setEditingProduct(null);\r\n            loadProducts();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {selectedProduct && (\r\n        <ProductDetailModal\r\n          product={selectedProduct}\r\n          onClose={() => setSelectedProduct(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Product Form Modal Component\r\ninterface ProductFormModalProps {\r\n  adminToken: string;\r\n  product?: Product | null;\r\n  onClose: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst ProductFormModal: React.FC<ProductFormModalProps> = ({ adminToken, product, onClose, onSuccess }) => {\r\n  const [formData, setFormData] = useState<{\r\n    name: string;\r\n    slug: string;\r\n    description: string;\r\n    basePrice: string | number;\r\n    categoryId: string;\r\n    compatibility: string[];\r\n    isFeatured: boolean;\r\n    inStock: boolean;\r\n    stockCount: string | number;\r\n  }>({\r\n    name: product?.name || '',\r\n    slug: product?.slug || '',\r\n    description: product?.description || '',\r\n    basePrice: product ? String(product.basePrice || '') : '',\r\n    categoryId: 'cat_iphone_cases',\r\n    compatibility: product?.compatibility || [],\r\n    isFeatured: product?.isFeatured || false,\r\n    inStock: product?.isActive || true,\r\n    stockCount: product ? String(product.stockCount || '') : ''\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [imagePreview, setImagePreview] = useState(product?.images?.[0]?.url || '');\r\n\r\n  const handleImagePreview = () => {\r\n    if (imageUrl) {\r\n      setImagePreview(imageUrl);\r\n      toast.success('Vista previa cargada');\r\n    } else {\r\n      toast.error('Por favor ingresa una URL de imagen');\r\n    }\r\n  };\r\n\r\n  const handleUnsplashAutomatic = () => {\r\n    const searchTerm = formData.name || 'iphone case';\r\n    const unsplashUrl = `https://source.unsplash.com/800x800/?${encodeURIComponent(searchTerm)}`;\r\n    setImageUrl(unsplashUrl);\r\n    setImagePreview(unsplashUrl);\r\n    toast.success('Imagen automática de Unsplash cargada');\r\n  };\r\n\r\n  const handleRemoveImage = () => {\r\n    setImageUrl('');\r\n    setImagePreview('');\r\n    toast.success('Imagen removida');\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      // Preparar datos para enviar\r\n      const dataToSend = {\r\n        name: formData.name,\r\n        slug: formData.slug,\r\n        description: formData.description || null,\r\n        basePrice: parseFloat(formData.basePrice as any) || 0,\r\n        categoryId: formData.categoryId,\r\n        brand: formData.name.split(' ')[0] || 'Generic',\r\n        model: 'Universal',\r\n        compatibility: JSON.stringify(formData.compatibility || []),\r\n        isFeatured: formData.isFeatured,\r\n        inStock: formData.inStock,\r\n        stockCount: parseInt(formData.stockCount as any) || 0,\r\n        imageUrl: imagePreview || null\r\n      };\r\n\r\n      console.log('Enviando datos:', dataToSend);\r\n\r\n      if (product) {\r\n        // Update\r\n        await axios.put(\r\n          `${API_URL}/products/${product.id}`,\r\n          dataToSend,\r\n          { headers: { Authorization: `Bearer ${adminToken}` } }\r\n        );\r\n        toast.success('Producto actualizado');\r\n      } else {\r\n        // Create\r\n        const response = await axios.post(\r\n          `${API_URL}/products`,\r\n          dataToSend,\r\n          { headers: { Authorization: `Bearer ${adminToken}` } }\r\n        );\r\n\r\n        // Si hay imagen, agregarla al producto creado\r\n        if (imagePreview && response.data?.product?.id) {\r\n          await axios.post(\r\n            `${API_URL}/products/${response.data.product.id}/images`,\r\n            {\r\n              url: imagePreview,\r\n              altText: formData.name,\r\n              position: 0,\r\n              isMain: true\r\n            },\r\n            { headers: { Authorization: `Bearer ${adminToken}` } }\r\n          );\r\n        }\r\n\r\n        toast.success('Producto creado con imagen');\r\n      }\r\n      onSuccess();\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error('Error saving product:', error);\r\n      console.error('Response:', error.response?.data);\r\n      toast.error(error.response?.data?.error || error.response?.data?.message || 'Error al guardar producto');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-4\">\r\n        <div className=\"fixed inset-0 bg-black opacity-50\" onClick={onClose}></div>\r\n\r\n        <div className=\"relative bg-white rounded-lg max-w-2xl w-full p-6\">\r\n          <h3 className=\"text-xl font-bold mb-4\">\r\n            {product ? 'Editar Producto' : 'Crear Producto'}\r\n          </h3>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Nombre *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Slug *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.slug}\r\n                  onChange={(e) => setFormData({ ...formData, slug: e.target.value.toLowerCase().replace(/\\s+/g, '-') })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Descripción\r\n              </label>\r\n              <textarea\r\n                rows={3}\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Precio Base *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  value={formData.basePrice}\r\n                  onChange={(e) => setFormData({ ...formData, basePrice: e.target.value === '' ? '' : parseFloat(e.target.value) || '' })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Stock\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={formData.stockCount}\r\n                  onChange={(e) => setFormData({ ...formData, stockCount: e.target.value === '' ? '' : parseInt(e.target.value) || '' })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-4 pt-7\">\r\n                <label className=\"flex items-center\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.isFeatured}\r\n                    onChange={(e) => setFormData({ ...formData, isFeatured: e.target.checked })}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  <span className=\"text-sm\">Destacado</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Image Upload Section */}\r\n            <div className=\"border-t pt-4\">\r\n              <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Imagen del Producto</h4>\r\n\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex space-x-2\">\r\n                  <input\r\n                    type=\"url\"\r\n                    placeholder=\"URL de la imagen (ej: https://imgur.com/imagen.jpg)\"\r\n                    value={imageUrl}\r\n                    onChange={(e) => setImageUrl(e.target.value)}\r\n                    className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 text-sm\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={handleImagePreview}\r\n                    className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 text-sm\"\r\n                  >\r\n                    Vista Previa\r\n                  </button>\r\n                </div>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleUnsplashAutomatic}\r\n                  className=\"w-full px-4 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-md hover:from-purple-600 hover:to-pink-600 text-sm font-medium flex items-center justify-center\"\r\n                >\r\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Usar Unsplash Automático\r\n                </button>\r\n\r\n                {imagePreview && (\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      src={imagePreview}\r\n                      alt=\"Preview\"\r\n                      className=\"w-full h-48 object-cover rounded-lg border-2 border-gray-200\"\r\n                      onError={(e) => {\r\n                        (e.target as HTMLImageElement).src = 'data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\"%3E%3Crect fill=\"%23f0f0f0\" width=\"400\" height=\"400\"/%3E%3Ctext fill=\"%23999\" font-family=\"sans-serif\" font-size=\"24\" dy=\"10.5\" font-weight=\"bold\" x=\"50%25\" y=\"50%25\" text-anchor=\"middle\"%3EError al cargar%3C/text%3E%3C/svg%3E';\r\n                      }}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleRemoveImage}\r\n                      className=\"absolute top-2 right-2 bg-red-500 text-white p-2 rounded-full hover:bg-red-600\"\r\n                      title=\"Eliminar imagen\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                <p className=\"text-xs text-gray-500\">\r\n                  💡 Tip: Puedes usar URLs de Unsplash, Imgur, o cualquier imagen pública en internet\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3 pt-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={submitting}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {submitting ? 'Guardando...' : (product ? 'Actualizar' : 'Crear')}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Product Detail Modal\r\ninterface ProductDetailModalProps {\r\n  product: Product;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ProductDetailModal: React.FC<ProductDetailModalProps> = ({ product, onClose }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen px-4\">\r\n        <div className=\"fixed inset-0 bg-black opacity-50\" onClick={onClose}></div>\r\n\r\n        <div className=\"relative bg-white rounded-lg max-w-4xl w-full p-6 max-h-[90vh] overflow-y-auto\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h3 className=\"text-2xl font-bold\">{product.name}</h3>\r\n            <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600\">\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-6\">\r\n            <div>\r\n              <h4 className=\"font-semibold mb-2\">Imágenes ({product.images.length})</h4>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {product.images.map((img, idx) => (\r\n                  <img key={idx} src={img.url} alt={img.altText} className=\"w-full h-32 object-cover rounded\" />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h4 className=\"font-semibold mb-2\">Detalles</h4>\r\n              <dl className=\"space-y-2 text-sm\">\r\n                <div>\r\n                  <dt className=\"text-gray-500\">Precio:</dt>\r\n                  <dd className=\"font-semibold\">${typeof product.basePrice === 'number' ? product.basePrice.toFixed(2) : parseFloat(String(product.basePrice)).toFixed(2)}</dd>\r\n                </div>\r\n                <div>\r\n                  <dt className=\"text-gray-500\">Stock:</dt>\r\n                  <dd>{product.stockCount}</dd>\r\n                </div>\r\n                <div>\r\n                  <dt className=\"text-gray-500\">Variantes:</dt>\r\n                  <dd>{product.variants.length}</dd>\r\n                </div>\r\n                <div>\r\n                  <dt className=\"text-gray-500\">Categoría:</dt>\r\n                  <dd>{product.category_name}</dd>\r\n                </div>\r\n              </dl>\r\n            </div>\r\n          </div>\r\n\r\n          {product.description && (\r\n            <div className=\"mt-4\">\r\n              <h4 className=\"font-semibold mb-2\">Descripción</h4>\r\n              <p className=\"text-gray-600\">{product.description}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsManager;\r\n","// frontend/src/components/admin/SuppliersManager.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface Supplier {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description?: string;\r\n  website?: string;\r\n  apiEnabled: boolean;\r\n  averageShippingDays: string;\r\n  defaultCommission: number;\r\n  defaultShippingCost: number;\r\n  rating?: number;\r\n  reliability?: number;\r\n  contactEmail?: string;\r\n  contactPhone?: string;\r\n  isActive: boolean;\r\n  productsCount?: number;\r\n  ordersCount?: number;\r\n  createdAt: string;\r\n}\r\n\r\ninterface SupplierFormData {\r\n  name: string;\r\n  slug: string;\r\n  description: string;\r\n  website: string;\r\n  averageShippingDays: string;\r\n  defaultCommission: number;\r\n  defaultShippingCost: number;\r\n  contactEmail: string;\r\n  contactPhone: string;\r\n}\r\n\r\nconst SuppliersManager: React.FC = () => {\r\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingSupplier, setEditingSupplier] = useState<Supplier | null>(null);\r\n  const [selectedSupplier, setSelectedSupplier] = useState<Supplier | null>(null);\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  const [formData, setFormData] = useState<SupplierFormData>({\r\n    name: '',\r\n    slug: '',\r\n    description: '',\r\n    website: '',\r\n    averageShippingDays: '15-30',\r\n    defaultCommission: 0,\r\n    defaultShippingCost: 0,\r\n    contactEmail: '',\r\n    contactPhone: ''\r\n  });\r\n\r\n  // Get token from either admin or regular auth\r\n  const token = localStorage.getItem('adminToken') || localStorage.getItem('authToken');\r\n\r\n  useEffect(() => {\r\n    loadSuppliers();\r\n  }, []);\r\n\r\n  const loadSuppliers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:3001/api/suppliers', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error al cargar proveedores');\r\n\r\n      const result = await response.json();\r\n      setSuppliers(result.data || []);\r\n    } catch (error: any) {\r\n      console.error('Error:', error);\r\n      toast.error(error.message || 'Error al cargar proveedores');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n    // Auto-generar slug del nombre\r\n    if (name === 'name' && !editingSupplier) {\r\n      const slug = value\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9]+/g, '-')\r\n        .replace(/(^-|-$)/g, '');\r\n      setFormData(prev => ({ ...prev, slug }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.name || !formData.slug) {\r\n      toast.error('Nombre y slug son requeridos');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const url = editingSupplier\r\n        ? `http://localhost:3001/api/suppliers/${editingSupplier.id}`\r\n        : 'http://localhost:3001/api/suppliers';\r\n\r\n      const method = editingSupplier ? 'PUT' : 'POST';\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Error al guardar proveedor');\r\n      }\r\n\r\n      const result = await response.json();\r\n      toast.success(result.message || 'Proveedor guardado exitosamente');\r\n\r\n      // Reset form\r\n      setFormData({\r\n        name: '',\r\n        slug: '',\r\n        description: '',\r\n        website: '',\r\n        averageShippingDays: '15-30',\r\n        defaultCommission: 0,\r\n        defaultShippingCost: 0,\r\n        contactEmail: '',\r\n        contactPhone: ''\r\n      });\r\n      setEditingSupplier(null);\r\n      setShowForm(false);\r\n\r\n      // Reload suppliers\r\n      loadSuppliers();\r\n    } catch (error: any) {\r\n      console.error('Error:', error);\r\n      toast.error(error.message || 'Error al guardar proveedor');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (supplier: Supplier) => {\r\n    setEditingSupplier(supplier);\r\n    setFormData({\r\n      name: supplier.name,\r\n      slug: supplier.slug,\r\n      description: supplier.description || '',\r\n      website: supplier.website || '',\r\n      averageShippingDays: supplier.averageShippingDays,\r\n      defaultCommission: supplier.defaultCommission,\r\n      defaultShippingCost: supplier.defaultShippingCost,\r\n      contactEmail: supplier.contactEmail || '',\r\n      contactPhone: supplier.contactPhone || ''\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (!window.confirm('¿Estás seguro de desactivar este proveedor?')) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/api/suppliers/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Error al eliminar proveedor');\r\n      }\r\n\r\n      toast.success('Proveedor desactivado exitosamente');\r\n      loadSuppliers();\r\n    } catch (error: any) {\r\n      console.error('Error:', error);\r\n      toast.error(error.message || 'Error al eliminar proveedor');\r\n    }\r\n  };\r\n\r\n  const viewSupplierStats = async (supplier: Supplier) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/api/suppliers/${supplier.id}/stats`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error al cargar estadísticas');\r\n\r\n      const result = await response.json();\r\n      setSelectedSupplier({ ...supplier, ...result.data.stats });\r\n      setShowStats(true);\r\n    } catch (error: any) {\r\n      console.error('Error:', error);\r\n      toast.error(error.message || 'Error al cargar estadísticas');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Gestión de Proveedores</h2>\r\n          <p className=\"text-gray-600 mt-1\">Administra tus proveedores de dropshipping</p>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            setShowForm(!showForm);\r\n            if (showForm) {\r\n              setEditingSupplier(null);\r\n              setFormData({\r\n                name: '',\r\n                slug: '',\r\n                description: '',\r\n                website: '',\r\n                averageShippingDays: '15-30',\r\n                defaultCommission: 0,\r\n                defaultShippingCost: 0,\r\n                contactEmail: '',\r\n                contactPhone: ''\r\n              });\r\n            }\r\n          }}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-2\"\r\n        >\r\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n          </svg>\r\n          <span>{showForm ? 'Cancelar' : 'Nuevo Proveedor'}</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      {showForm && (\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">\r\n            {editingSupplier ? 'Editar Proveedor' : 'Nuevo Proveedor'}\r\n          </h3>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Nombre *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Slug *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"slug\"\r\n                  value={formData.slug}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Website\r\n                </label>\r\n                <input\r\n                  type=\"url\"\r\n                  name=\"website\"\r\n                  value={formData.website}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"https://...\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Tiempo de Envío Promedio\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"averageShippingDays\"\r\n                  value={formData.averageShippingDays}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"15-30\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Comisión Default (%)\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"defaultCommission\"\r\n                  value={formData.defaultCommission}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Costo de Envío Default ($)\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"defaultShippingCost\"\r\n                  value={formData.defaultShippingCost}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Email de Contacto\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"contactEmail\"\r\n                  value={formData.contactEmail}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Teléfono de Contacto\r\n                </label>\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"contactPhone\"\r\n                  value={formData.contactPhone}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Descripción\r\n              </label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowForm(false);\r\n                  setEditingSupplier(null);\r\n                }}\r\n                className=\"px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n              >\r\n                {editingSupplier ? 'Actualizar' : 'Crear'} Proveedor\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {/* Suppliers List */}\r\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Proveedor\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Productos\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Órdenes\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Envío\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Comisión\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Estado\r\n                </th>\r\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Acciones\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {suppliers.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={7} className=\"px-6 py-8 text-center text-gray-500\">\r\n                    No hay proveedores registrados. Crea uno para comenzar.\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                suppliers.map(supplier => (\r\n                  <tr key={supplier.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-900\">{supplier.name}</div>\r\n                        <div className=\"text-sm text-gray-500\">{supplier.slug}</div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900\">{supplier.productsCount || 0}</span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900\">{supplier.ordersCount || 0}</span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900\">{supplier.averageShippingDays} días</span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900\">{supplier.defaultCommission}%</span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 py-1 text-xs font-semibold rounded-full ${\r\n                        supplier.isActive\r\n                          ? 'bg-green-100 text-green-800'\r\n                          : 'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {supplier.isActive ? 'Activo' : 'Inactivo'}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2\">\r\n                      <button\r\n                        onClick={() => viewSupplierStats(supplier)}\r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                        title=\"Ver estadísticas\"\r\n                      >\r\n                        <svg className=\"w-5 h-5 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                        </svg>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleEdit(supplier)}\r\n                        className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        title=\"Editar\"\r\n                      >\r\n                        <svg className=\"w-5 h-5 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                        </svg>\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDelete(supplier.id)}\r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                        title=\"Desactivar\"\r\n                      >\r\n                        <svg className=\"w-5 h-5 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                        </svg>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Modal */}\r\n      {showStats && selectedSupplier && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full m-4\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <h3 className=\"text-xl font-bold\">Estadísticas - {selectedSupplier.name}</h3>\r\n              <button\r\n                onClick={() => setShowStats(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Total Productos</div>\r\n                <div className=\"text-2xl font-bold text-blue-600\">{selectedSupplier.productsCount || 0}</div>\r\n              </div>\r\n              <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Productos Activos</div>\r\n                <div className=\"text-2xl font-bold text-green-600\">{(selectedSupplier as any).activeProducts || 0}</div>\r\n              </div>\r\n              <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Total Órdenes</div>\r\n                <div className=\"text-2xl font-bold text-purple-600\">{selectedSupplier.ordersCount || 0}</div>\r\n              </div>\r\n              <div className=\"bg-yellow-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Órdenes Pendientes</div>\r\n                <div className=\"text-2xl font-bold text-yellow-600\">{(selectedSupplier as any).pendingOrders || 0}</div>\r\n              </div>\r\n              <div className=\"bg-indigo-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Confiabilidad</div>\r\n                <div className=\"text-2xl font-bold text-indigo-600\">{selectedSupplier.reliability || 100}%</div>\r\n              </div>\r\n              <div className=\"bg-pink-50 p-4 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600\">Rating</div>\r\n                <div className=\"text-2xl font-bold text-pink-600\">{selectedSupplier.rating || 0}/5</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuppliersManager;\r\n","// frontend/src/components/admin/ProductImporter.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface Supplier {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  isActive: boolean;\r\n}\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n}\r\n\r\ninterface ImportedProduct {\r\n  externalId: string | null;\r\n  name: string;\r\n  description: string;\r\n  supplierPrice: number;\r\n  images: string[];\r\n  variants: any[];\r\n  specifications: any;\r\n  shippingTime: string;\r\n  supplierUrl: string;\r\n  platform: string;\r\n  needsManualReview: boolean;\r\n}\r\n\r\nconst ProductImporter: React.FC = () => {\r\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\r\n  const [categories, setCategories] = useState<Category[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [importedProduct, setImportedProduct] = useState<ImportedProduct | null>(null);\r\n\r\n  // Form state\r\n  const [productUrl, setProductUrl] = useState('');\r\n  const [selectedSupplier, setSelectedSupplier] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [profitMargin, setProfitMargin] = useState(30);\r\n\r\n  // Get token from either admin or regular auth\r\n  const token = localStorage.getItem('adminToken') || localStorage.getItem('authToken');\r\n\r\n  // Load suppliers and categories\r\n  useEffect(() => {\r\n    loadSuppliers();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n  const loadSuppliers = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/suppliers?active=true`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error cargando proveedores');\r\n\r\n      const result = await response.json();\r\n      setSuppliers(result.data || []);\r\n    } catch (error) {\r\n      console.error('Error loading suppliers:', error);\r\n      toast.error('Error al cargar proveedores');\r\n    }\r\n  };\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/categories`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Error cargando categorías');\r\n\r\n      const result = await response.json();\r\n      setCategories(result.data || []);\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n      toast.error('Error al cargar categorías');\r\n    }\r\n  };\r\n\r\n  const handleImport = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!productUrl.trim()) {\r\n      toast.error('Por favor ingresa una URL');\r\n      return;\r\n    }\r\n\r\n    if (!selectedSupplier) {\r\n      toast.error('Por favor selecciona un proveedor');\r\n      return;\r\n    }\r\n\r\n    if (!selectedCategory) {\r\n      toast.error('Por favor selecciona una categoría');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/suppliers/import-product`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          url: productUrl,\r\n          supplierId: selectedSupplier,\r\n          categoryId: selectedCategory,\r\n          profitMargin: profitMargin\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Error al importar producto');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setImportedProduct(result.data.product);\r\n        toast.success('Producto importado exitosamente. Revisa los datos antes de guardar.');\r\n      } else {\r\n        throw new Error(result.message);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error importing product:', error);\r\n      toast.error(error.message || 'Error al importar producto');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveProduct = async () => {\r\n    if (!importedProduct) return;\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/products`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(importedProduct)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Error al guardar producto');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success('Producto guardado exitosamente');\r\n        // Reset form\r\n        setProductUrl('');\r\n        setImportedProduct(null);\r\n      } else {\r\n        throw new Error(result.message);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error saving product:', error);\r\n      toast.error(error.message || 'Error al guardar producto');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateSalePrice = (): string => {\r\n    if (!importedProduct) return '0.00';\r\n    return (importedProduct.supplierPrice * (1 + profitMargin / 100)).toFixed(2);\r\n  };\r\n\r\n  const calculateProfit = (): string => {\r\n    if (!importedProduct) return '0.00';\r\n    const salePrice = parseFloat(calculateSalePrice());\r\n    return (salePrice - importedProduct.supplierPrice).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Importar Producto</h2>\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              Importa productos desde AliExpress, Amazon, CJ Dropshipping, etc.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Import Form */}\r\n        <form onSubmit={handleImport} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              URL del Producto *\r\n            </label>\r\n            <input\r\n              type=\"url\"\r\n              value={productUrl}\r\n              onChange={(e) => setProductUrl(e.target.value)}\r\n              placeholder=\"https://www.aliexpress.com/item/...\"\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              required\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Soporta: AliExpress, CJ Dropshipping, Amazon y otras plataformas\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Proveedor *\r\n              </label>\r\n              <select\r\n                value={selectedSupplier}\r\n                onChange={(e) => setSelectedSupplier(e.target.value)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                required\r\n              >\r\n                <option value=\"\">Seleccionar proveedor</option>\r\n                {suppliers.map(supplier => (\r\n                  <option key={supplier.id} value={supplier.id}>\r\n                    {supplier.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Categoría *\r\n              </label>\r\n              <select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                required\r\n              >\r\n                <option value=\"\">Seleccionar categoría</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Margen de Ganancia (%)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={profitMargin}\r\n                onChange={(e) => setProfitMargin(parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"500\"\r\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n            >\r\n              {loading ? 'Importando...' : 'Importar Producto'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Imported Product Preview */}\r\n      {importedProduct && (\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-xl font-bold text-gray-900\">Producto Importado</h3>\r\n            {importedProduct.needsManualReview && (\r\n              <span className=\"bg-yellow-100 text-yellow-800 text-xs font-semibold px-3 py-1 rounded-full\">\r\n                ⚠️ Requiere Revisión Manual\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          {/* Imágenes importadas */}\r\n          {importedProduct.images && importedProduct.images.length > 0 && (\r\n            <div className=\"mb-6\">\r\n              <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\r\n                <svg className=\"w-5 h-5 mr-2 text-green-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                {importedProduct.images.length} Imágenes Importadas Automáticamente\r\n              </h4>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 gap-3\">\r\n                {importedProduct.images.map((imageUrl, index) => (\r\n                  <div key={index} className=\"relative group\">\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt={`Producto ${index + 1}`}\r\n                      className=\"w-full h-32 object-cover rounded-lg border-2 border-gray-200 hover:border-blue-500 transition-all shadow-sm\"\r\n                      onError={(e) => {\r\n                        e.currentTarget.src = 'https://via.placeholder.com/150?text=Error';\r\n                      }}\r\n                    />\r\n                    <div className=\"absolute top-1 right-1 bg-blue-600 text-white text-xs px-2 py-1 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                      #{index + 1}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <p className=\"text-xs text-gray-500 mt-2\">\r\n                ✅ Las imágenes se importaron automáticamente desde {importedProduct.platform}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Left Column - Product Info */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={importedProduct.name}\r\n                  onChange={(e) => setImportedProduct({ ...importedProduct, name: e.target.value })}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Descripción</label>\r\n                <textarea\r\n                  value={importedProduct.description}\r\n                  onChange={(e) => setImportedProduct({ ...importedProduct, description: e.target.value })}\r\n                  rows={4}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Plataforma</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={importedProduct.platform}\r\n                  disabled\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">URL del Proveedor</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={importedProduct.supplierUrl}\r\n                  disabled\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg bg-gray-50 text-sm\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tiempo de Envío</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={importedProduct.shippingTime}\r\n                  onChange={(e) => setImportedProduct({ ...importedProduct, shippingTime: e.target.value })}\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Right Column - Pricing */}\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\r\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Cálculo de Precios</h4>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Precio del Proveedor:</span>\r\n                    <span className=\"font-semibold text-gray-900\">\r\n                      ${importedProduct.supplierPrice.toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Margen de Ganancia:</span>\r\n                    <span className=\"font-semibold text-blue-600\">{profitMargin}%</span>\r\n                  </div>\r\n\r\n                  <div className=\"border-t border-blue-200 pt-2 mt-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-sm font-semibold text-gray-900\">Precio de Venta:</span>\r\n                      <span className=\"font-bold text-lg text-green-600\">\r\n                        ${calculateSalePrice()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Ganancia por Unidad:</span>\r\n                    <span className=\"font-semibold text-green-600\">${calculateProfit()}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-yellow-50 p-4 rounded-lg\">\r\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Notas Importantes</h4>\r\n                <ul className=\"text-sm text-gray-700 space-y-1 list-disc list-inside\">\r\n                  <li>Revisa cuidadosamente toda la información antes de guardar</li>\r\n                  <li>Las imágenes deben descargarse manualmente si es necesario</li>\r\n                  <li>Verifica los tiempos de envío y disponibilidad</li>\r\n                  <li>Actualiza la descripción para tu mercado</li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => setImportedProduct(null)}\r\n                  className=\"flex-1 bg-gray-200 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-300 transition-colors font-semibold\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={handleSaveProduct}\r\n                  disabled={loading}\r\n                  className=\"flex-1 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-semibold disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n                >\r\n                  {loading ? 'Guardando...' : 'Guardar Producto'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\r\n        <h3 className=\"font-bold text-gray-900 mb-3 flex items-center\">\r\n          <svg className=\"w-5 h-5 mr-2 text-blue-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n          Cómo Funciona\r\n        </h3>\r\n        <div className=\"text-sm text-gray-700 space-y-2\">\r\n          <p>\r\n            <strong>1. Copia la URL:</strong> Visita AliExpress, Amazon o CJ Dropshipping y copia la URL del producto que deseas importar.\r\n          </p>\r\n          <p>\r\n            <strong>2. Selecciona datos:</strong> Elige el proveedor, categoría y margen de ganancia para el producto.\r\n          </p>\r\n          <p>\r\n            <strong>3. Importa:</strong> Haz clic en \"Importar Producto\" y el sistema extraerá automáticamente la información.\r\n          </p>\r\n          <p>\r\n            <strong>4. Revisa y edita:</strong> Verifica los datos importados, edita lo necesario y ajusta los precios.\r\n          </p>\r\n          <p>\r\n            <strong>5. Guarda:</strong> Cuando todo esté correcto, guarda el producto en tu catálogo.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductImporter;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\ninterface DashboardStats {\r\n  totalOrders: number;\r\n  totalRevenue: number;\r\n  totalCustomers: number;\r\n  averageOrderValue: number;\r\n  ordersToday: number;\r\n  revenueToday: number;\r\n  conversionRate: number;\r\n  topProducts: {\r\n    id: string;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }[];\r\n  recentOrders: {\r\n    id: string;\r\n    orderNumber: string;\r\n    customerName: string;\r\n    total: number;\r\n    status: string;\r\n    createdAt: string;\r\n  }[];\r\n  salesByMonth: {\r\n    month: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }[];\r\n  ordersByStatus: {\r\n    status: string;\r\n    count: number;\r\n  }[];\r\n}\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  const [stats, setStats] = useState<DashboardStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeRange, setTimeRange] = useState<'today' | 'week' | 'month' | 'year'>('month');\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n  }, [timeRange]);\r\n\r\n  const loadStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n      const token = localStorage.getItem('adminToken');\r\n\r\n      const response = await fetch(`${API_URL}/analytics/dashboard?range=${timeRange}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setStats(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading stats:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('es-PE', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-PE', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors: Record<string, string> = {\r\n      PENDING: 'bg-yellow-100 text-yellow-800',\r\n      CONFIRMED: 'bg-blue-100 text-blue-800',\r\n      PROCESSING: 'bg-purple-100 text-purple-800',\r\n      SHIPPED: 'bg-indigo-100 text-indigo-800',\r\n      DELIVERED: 'bg-green-100 text-green-800',\r\n      CANCELLED: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Cargando analytics...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!stats) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n        <p className=\"text-red-700\">Error al cargar estadísticas</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-3xl font-extrabold text-gray-900\">\r\n            Dashboard de Analytics\r\n          </h2>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Visualiza el rendimiento de tu tienda en tiempo real\r\n          </p>\r\n        </div>\r\n\r\n        {/* Time Range Selector */}\r\n        <div className=\"flex space-x-2 bg-white rounded-lg border border-gray-200 p-1\">\r\n          {['today', 'week', 'month', 'year'].map((range) => (\r\n            <button\r\n              key={range}\r\n              onClick={() => setTimeRange(range as any)}\r\n              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                timeRange === range\r\n                  ? 'bg-blue-600 text-white'\r\n                  : 'text-gray-700 hover:bg-gray-100'\r\n              }`}\r\n            >\r\n              {range === 'today' && 'Hoy'}\r\n              {range === 'week' && 'Semana'}\r\n              {range === 'month' && 'Mes'}\r\n              {range === 'year' && 'Año'}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {/* Total Revenue */}\r\n        <div className=\"bg-gradient-to-br from-blue-600 to-blue-700 rounded-2xl shadow-lg p-6 text-white\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-3 bg-white/20 rounded-lg\">\r\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n            <span className=\"text-sm font-medium opacity-80\">Ingresos Totales</span>\r\n          </div>\r\n          <div className=\"text-4xl font-extrabold mb-2\">\r\n            {formatCurrency(stats.totalRevenue)}\r\n          </div>\r\n          <div className=\"flex items-center text-sm opacity-90\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n            </svg>\r\n            <span>+{((stats.revenueToday / stats.totalRevenue) * 100).toFixed(1)}% hoy</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Total Orders */}\r\n        <div className=\"bg-gradient-to-br from-green-600 to-green-700 rounded-2xl shadow-lg p-6 text-white\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-3 bg-white/20 rounded-lg\">\r\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\r\n              </svg>\r\n            </div>\r\n            <span className=\"text-sm font-medium opacity-80\">Órdenes Totales</span>\r\n          </div>\r\n          <div className=\"text-4xl font-extrabold mb-2\">\r\n            {stats.totalOrders.toLocaleString()}\r\n          </div>\r\n          <div className=\"flex items-center text-sm opacity-90\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            <span>{stats.ordersToday} hoy</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Total Customers */}\r\n        <div className=\"bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl shadow-lg p-6 text-white\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-3 bg-white/20 rounded-lg\">\r\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n              </svg>\r\n            </div>\r\n            <span className=\"text-sm font-medium opacity-80\">Clientes</span>\r\n          </div>\r\n          <div className=\"text-4xl font-extrabold mb-2\">\r\n            {stats.totalCustomers.toLocaleString()}\r\n          </div>\r\n          <div className=\"flex items-center text-sm opacity-90\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n            <span>Base de clientes</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Average Order Value */}\r\n        <div className=\"bg-gradient-to-br from-orange-600 to-orange-700 rounded-2xl shadow-lg p-6 text-white\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-3 bg-white/20 rounded-lg\">\r\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n              </svg>\r\n            </div>\r\n            <span className=\"text-sm font-medium opacity-80\">Ticket Promedio</span>\r\n          </div>\r\n          <div className=\"text-4xl font-extrabold mb-2\">\r\n            {formatCurrency(stats.averageOrderValue)}\r\n          </div>\r\n          <div className=\"flex items-center text-sm opacity-90\">\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n            </svg>\r\n            <span>Por orden</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts Row */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Sales by Month Chart */}\r\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Ventas por Mes</h3>\r\n          <div className=\"space-y-4\">\r\n            {stats.salesByMonth.map((item, index) => {\r\n              const maxRevenue = Math.max(...stats.salesByMonth.map(m => m.revenue));\r\n              const percentage = (item.revenue / maxRevenue) * 100;\r\n\r\n              return (\r\n                <div key={index}>\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <span className=\"text-sm font-medium text-gray-700\">{item.month}</span>\r\n                    <div className=\"text-right\">\r\n                      <span className=\"text-sm font-bold text-gray-900\">\r\n                        {formatCurrency(item.revenue)}\r\n                      </span>\r\n                      <span className=\"text-xs text-gray-500 ml-2\">\r\n                        ({item.sales} órdenes)\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-3\">\r\n                    <div\r\n                      className=\"bg-gradient-to-r from-blue-600 to-purple-600 h-3 rounded-full transition-all duration-500\"\r\n                      style={{ width: `${percentage}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Orders by Status */}\r\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Órdenes por Estado</h3>\r\n          <div className=\"space-y-3\">\r\n            {stats.ordersByStatus.map((item, index) => {\r\n              const totalOrders = stats.ordersByStatus.reduce((sum, s) => sum + s.count, 0);\r\n              const percentage = (item.count / totalOrders) * 100;\r\n\r\n              return (\r\n                <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <span className={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(item.status)}`}>\r\n                      {item.status}\r\n                    </span>\r\n                    <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-32\">\r\n                      <div\r\n                        className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\r\n                        style={{ width: `${percentage}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <div className=\"text-sm font-bold text-gray-900\">{item.count}</div>\r\n                    <div className=\"text-xs text-gray-500\">{percentage.toFixed(1)}%</div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Products & Recent Orders */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Top Products */}\r\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Productos Más Vendidos</h3>\r\n          <div className=\"space-y-4\">\r\n            {stats.topProducts.map((product, index) => (\r\n              <div key={product.id} className=\"flex items-center space-x-4 p-3 bg-gradient-to-r from-gray-50 to-transparent rounded-lg hover:from-blue-50 transition-colors\">\r\n                <div className=\"flex-shrink-0 w-10 h-10 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold\">\r\n                  #{index + 1}\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <p className=\"text-sm font-bold text-gray-900 truncate\">{product.name}</p>\r\n                  <p className=\"text-xs text-gray-500\">{product.sales} ventas</p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm font-bold text-green-600\">\r\n                    {formatCurrency(product.revenue)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Orders */}\r\n        <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Órdenes Recientes</h3>\r\n          <div className=\"space-y-3\">\r\n            {stats.recentOrders.map((order) => (\r\n              <div key={order.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-blue-50 transition-colors\">\r\n                <div>\r\n                  <p className=\"text-sm font-bold text-gray-900\">{order.orderNumber}</p>\r\n                  <p className=\"text-xs text-gray-600\">{order.customerName}</p>\r\n                  <p className=\"text-xs text-gray-500\">{formatDate(order.createdAt)}</p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm font-bold text-gray-900\">{formatCurrency(order.total)}</p>\r\n                  <span className={`inline-block px-2 py-0.5 rounded-full text-xs font-semibold ${getStatusColor(order.status)}`}>\r\n                    {order.status}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","// frontend/src/components/admin/ImprovedAdminDashboard.tsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport ProductsManager from './ProductsManager';\r\nimport SuppliersManager from './SuppliersManager';\r\nimport ProductImporter from './ProductImporter';\r\nimport AnalyticsDashboard from './AnalyticsDashboard';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\ninterface Order {\r\n  id: string;\r\n  orderNumber: string;\r\n  customerFirstName: string;\r\n  customerLastName: string;\r\n  customerEmail: string;\r\n  total: number;\r\n  status: string;\r\n  paymentStatus: string;\r\n  createdAt: string;\r\n  items: any[];\r\n}\r\n\r\ninterface Stats {\r\n  totalOrders: number;\r\n  totalRevenue: number;\r\n  pendingOrders: number;\r\n  completedOrders: number;\r\n}\r\n\r\ninterface AdminDashboardProps {\r\n  onClose: () => void;\r\n  adminToken: string;\r\n}\r\n\r\nconst ImprovedAdminDashboard: React.FC<AdminDashboardProps> = ({ onClose, adminToken }) => {\r\n  const [activeTab, setActiveTab] = useState<'analytics' | 'orders' | 'products' | 'suppliers' | 'import'>('analytics');\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [stats, setStats] = useState<Stats>({ totalOrders: 0, totalRevenue: 0, pendingOrders: 0, completedOrders: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\r\n\r\n  const fetchOrders = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_URL}/orders`, {\r\n        headers: { Authorization: `Bearer ${adminToken}` }\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const ordersData = response.data.data;\r\n        setOrders(ordersData);\r\n\r\n        // Calcular estadísticas\r\n        const total = ordersData.length;\r\n        const revenue = ordersData.reduce((sum: number, order: Order) => sum + order.total, 0);\r\n        const pending = ordersData.filter((o: Order) => o.status === 'PENDING').length;\r\n        const completed = ordersData.filter((o: Order) => o.status === 'DELIVERED').length;\r\n\r\n        setStats({\r\n          totalOrders: total,\r\n          totalRevenue: revenue,\r\n          pendingOrders: pending,\r\n          completedOrders: completed\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      toast.error('Error al cargar órdenes');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [adminToken]);\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [fetchOrders]);\r\n\r\n  const updateOrderStatus = async (orderId: string, newStatus: string) => {\r\n    try {\r\n      await axios.patch(\r\n        `${API_URL}/orders/${orderId}/status`,\r\n        { status: newStatus },\r\n        { headers: { Authorization: `Bearer ${adminToken}` } }\r\n      );\r\n\r\n      toast.success(`Estado actualizado a ${newStatus}`);\r\n      fetchOrders();\r\n    } catch (error) {\r\n      console.error('Error updating status:', error);\r\n      toast.error('Error al actualizar estado');\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors: { [key: string]: string } = {\r\n      'PENDING': 'bg-yellow-100 text-yellow-800 border-yellow-300',\r\n      'CONFIRMED': 'bg-blue-100 text-blue-800 border-blue-300',\r\n      'PROCESSING': 'bg-purple-100 text-purple-800 border-purple-300',\r\n      'SHIPPED': 'bg-indigo-100 text-indigo-800 border-indigo-300',\r\n      'DELIVERED': 'bg-green-100 text-green-800 border-green-300',\r\n      'CANCELLED': 'bg-red-100 text-red-800 border-red-300'\r\n    };\r\n    return colors[status] || 'bg-gray-100 text-gray-800 border-gray-300';\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    const texts: { [key: string]: string } = {\r\n      'PENDING': 'Pendiente',\r\n      'CONFIRMED': 'Confirmada',\r\n      'PROCESSING': 'En Proceso',\r\n      'SHIPPED': 'Enviada',\r\n      'DELIVERED': 'Entregada',\r\n      'CANCELLED': 'Cancelada'\r\n    };\r\n    return texts[status] || status;\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-hidden bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b sticky top-0 z-10\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-xl font-bold text-gray-900\">Panel de Administración</h1>\r\n                <p className=\"text-sm text-gray-500\">Gestiona tu tienda</p>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Navigation Tabs */}\r\n          <div className=\"flex space-x-8 -mb-px\">\r\n            <button\r\n              onClick={() => setActiveTab('analytics')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'analytics'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n                <span>Analytics</span>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setActiveTab('orders')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'orders'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\r\n                </svg>\r\n                <span>Órdenes</span>\r\n                {stats.pendingOrders > 0 && (\r\n                  <span className=\"bg-red-500 text-white text-xs px-2 py-0.5 rounded-full\">\r\n                    {stats.pendingOrders}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setActiveTab('products')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'products'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\r\n                </svg>\r\n                <span>Productos</span>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setActiveTab('suppliers')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'suppliers'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                </svg>\r\n                <span>Proveedores</span>\r\n              </div>\r\n            </button>\r\n\r\n            <button\r\n              onClick={() => setActiveTab('import')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\r\n                activeTab === 'import'\r\n                  ? 'border-blue-500 text-blue-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n                </svg>\r\n                <span>Importar</span>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center h-96\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-16 w-16 border-b-4 border-blue-600 mx-auto\"></div>\r\n              <p className=\"mt-4 text-gray-600\">Cargando...</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* Analytics Tab */}\r\n            {activeTab === 'analytics' && (\r\n              <AnalyticsDashboard />\r\n            )}\r\n\r\n            {/* Orders Tab */}\r\n            {activeTab === 'orders' && (\r\n              <div className=\"space-y-6\">\r\n                {/* Stats Cards */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                  <div className=\"bg-white rounded-lg shadow-sm p-6 border border-gray-200\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-600\">Total Órdenes</p>\r\n                        <p className=\"text-3xl font-bold text-gray-900 mt-2\">{stats.totalOrders}</p>\r\n                      </div>\r\n                      <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-white rounded-lg shadow-sm p-6 border border-gray-200\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-600\">Ingresos Totales</p>\r\n                        <p className=\"text-3xl font-bold text-gray-900 mt-2\">${stats.totalRevenue.toFixed(2)}</p>\r\n                      </div>\r\n                      <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-white rounded-lg shadow-sm p-6 border border-gray-200\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-600\">Pendientes</p>\r\n                        <p className=\"text-3xl font-bold text-gray-900 mt-2\">{stats.pendingOrders}</p>\r\n                      </div>\r\n                      <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-white rounded-lg shadow-sm p-6 border border-gray-200\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-600\">Completadas</p>\r\n                        <p className=\"text-3xl font-bold text-gray-900 mt-2\">{stats.completedOrders}</p>\r\n                      </div>\r\n                      <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                        <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Orders Table */}\r\n                <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n                  <div className=\"p-6 border-b border-gray-200\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-900\">Todas las Órdenes</h2>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Orden</th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Cliente</th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Email</th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total</th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Estado</th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Acciones</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {orders.map((order) => (\r\n                          <tr key={order.id} className=\"hover:bg-gray-50\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                              <button\r\n                                onClick={() => setSelectedOrder(order)}\r\n                                className=\"text-sm font-medium text-blue-600 hover:text-blue-800\"\r\n                              >\r\n                                {order.orderNumber}\r\n                              </button>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {order.customerFirstName} {order.customerLastName}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              {order.customerEmail}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                              ${order.total.toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                              <select\r\n                                value={order.status}\r\n                                onChange={(e) => updateOrderStatus(order.id, e.target.value)}\r\n                                className={`px-3 py-1 text-xs font-medium rounded-full border ${getStatusColor(order.status)} cursor-pointer`}\r\n                              >\r\n                                <option value=\"PENDING\">Pendiente</option>\r\n                                <option value=\"CONFIRMED\">Confirmada</option>\r\n                                <option value=\"PROCESSING\">En Proceso</option>\r\n                                <option value=\"SHIPPED\">Enviada</option>\r\n                                <option value=\"DELIVERED\">Entregada</option>\r\n                                <option value=\"CANCELLED\">Cancelada</option>\r\n                              </select>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                              <button\r\n                                onClick={() => setSelectedOrder(order)}\r\n                                className=\"text-blue-600 hover:text-blue-800 font-medium\"\r\n                              >\r\n                                Ver Detalles\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Products Tab */}\r\n            {activeTab === 'products' && (\r\n              <ProductsManager adminToken={adminToken} />\r\n            )}\r\n\r\n            {/* Suppliers Tab */}\r\n            {activeTab === 'suppliers' && (\r\n              <SuppliersManager />\r\n            )}\r\n\r\n            {/* Import Tab */}\r\n            {activeTab === 'import' && (\r\n              <ProductImporter />\r\n            )}\r\n          </>\r\n        )}\r\n      </main>\r\n\r\n      {/* Order Details Modal */}\r\n      {selectedOrder && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20\">\r\n            <div className=\"fixed inset-0 bg-black opacity-50\" onClick={() => setSelectedOrder(null)}></div>\r\n\r\n            <div className=\"relative bg-white rounded-lg max-w-4xl w-full shadow-xl overflow-hidden\">\r\n              {/* Header */}\r\n              <div className=\"bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div className=\"text-white\">\r\n                    <h3 className=\"text-2xl font-bold\">{selectedOrder.orderNumber}</h3>\r\n                    <p className=\"text-blue-100 mt-1\">\r\n                      {new Date(selectedOrder.createdAt).toLocaleString('es-PE', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric',\r\n                        hour: '2-digit',\r\n                        minute: '2-digit'\r\n                      })}\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => setSelectedOrder(null)}\r\n                    className=\"p-1 hover:bg-blue-800 rounded text-white\"\r\n                  >\r\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Content */}\r\n              <div className=\"p-6 max-h-[80vh] overflow-y-auto\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                  {/* Información del Cliente */}\r\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <svg className=\"w-5 h-5 text-blue-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                      </svg>\r\n                      <h4 className=\"font-semibold text-blue-900\">Información del Cliente</h4>\r\n                    </div>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Nombre completo:</span>\r\n                        <p className=\"font-medium text-gray-900\">{selectedOrder.customerFirstName} {selectedOrder.customerLastName}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Email:</span>\r\n                        <p className=\"font-medium text-gray-900\">{selectedOrder.customerEmail}</p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Teléfono:</span>\r\n                        <p className=\"font-medium text-gray-900\">{(selectedOrder as any).customerPhone || 'N/A'}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Dirección de Envío */}\r\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <svg className=\"w-5 h-5 text-green-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                      </svg>\r\n                      <h4 className=\"font-semibold text-green-900\">Dirección de Envío</h4>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      <p className=\"font-medium\">{(selectedOrder as any).shippingAddress}</p>\r\n                      <p>{(selectedOrder as any).shippingCity}, {(selectedOrder as any).shippingState}</p>\r\n                      <p>CP: {(selectedOrder as any).shippingPostalCode}</p>\r\n                      <p className=\"font-medium mt-1\">{(selectedOrder as any).shippingCountry}</p>\r\n                      {(selectedOrder as any).notes && (\r\n                        <div className=\"mt-2 pt-2 border-t border-green-200\">\r\n                          <span className=\"text-gray-600\">Notas:</span>\r\n                          <p className=\"text-gray-700\">{(selectedOrder as any).notes}</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Estado y Método de Pago */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n                  <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <svg className=\"w-5 h-5 text-purple-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                      <h4 className=\"font-semibold text-purple-900\">Estado</h4>\r\n                    </div>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Estado de la orden:</span>\r\n                        <p className=\"font-medium\"><span className={`px-3 py-1 rounded-full text-xs ${getStatusColor(selectedOrder.status)}`}>\r\n                          {getStatusText(selectedOrder.status)}\r\n                        </span></p>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Estado del pago:</span>\r\n                        <p className=\"font-medium text-gray-900\">{selectedOrder.paymentStatus}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-cyan-50 border border-cyan-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <svg className=\"w-5 h-5 text-cyan-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\" />\r\n                      </svg>\r\n                      <h4 className=\"font-semibold text-cyan-900\">Método de Pago</h4>\r\n                    </div>\r\n                    <div className=\"text-sm\">\r\n                      <div className=\"mb-2\">\r\n                        <span className=\"text-gray-600\">Método:</span>\r\n                        <p className=\"font-medium text-gray-900 capitalize\">\r\n                          {(selectedOrder as any).paymentMethod === 'yape' && '📱 Yape'}\r\n                          {(selectedOrder as any).paymentMethod === 'plin' && '💸 Plin'}\r\n                          {(selectedOrder as any).paymentMethod === 'mercadopago' && '💳 MercadoPago'}\r\n                          {(selectedOrder as any).paymentMethod === 'stripe' && '💳 Tarjeta'}\r\n                          {(selectedOrder as any).paymentMethod === 'manual' && '💵 Manual'}\r\n                          {!(selectedOrder as any).paymentMethod && 'N/A'}\r\n                        </p>\r\n                      </div>\r\n                      {(selectedOrder as any).notes && (selectedOrder as any).notes.includes('Código de operación') && (\r\n                        <div className=\"mt-2 pt-2 border-t border-cyan-200\">\r\n                          <span className=\"text-gray-600\">Código:</span>\r\n                          <p className=\"font-mono font-bold text-green-700 text-lg\">\r\n                            {(selectedOrder as any).notes.match(/Código de operación.*?:\\s*(\\w+)/)?.[1] || 'N/A'}\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-center mb-3\">\r\n                      <svg className=\"w-5 h-5 text-orange-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0\" />\r\n                      </svg>\r\n                      <h4 className=\"font-semibold text-orange-900\">Tracking</h4>\r\n                    </div>\r\n                    <div className=\"text-sm\">\r\n                      {(selectedOrder as any).trackingNumber ? (\r\n                        <>\r\n                          <p className=\"text-gray-600\">Número de rastreo:</p>\r\n                          <p className=\"font-mono font-medium text-gray-900\">{(selectedOrder as any).trackingNumber}</p>\r\n                          {(selectedOrder as any).trackingUrl && (\r\n                            <a\r\n                              href={(selectedOrder as any).trackingUrl}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-600 hover:text-blue-800 text-xs\"\r\n                            >\r\n                              Ver seguimiento →\r\n                            </a>\r\n                          )}\r\n                        </>\r\n                      ) : (\r\n                        <p className=\"text-gray-500 italic\">Sin información de tracking</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Productos */}\r\n                <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden mb-6\">\r\n                  <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\r\n                    <h4 className=\"font-semibold text-gray-900 flex items-center\">\r\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\r\n                      </svg>\r\n                      Productos Ordenados\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"p-4\">\r\n                    <table className=\"min-w-full\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Producto</th>\r\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Modelo/Color</th>\r\n                          <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase\">Cant.</th>\r\n                          <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase\">Precio</th>\r\n                          <th className=\"px-4 py-2 text-right text-xs font-medium text-gray-500 uppercase\">Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"divide-y divide-gray-200\">\r\n                        {selectedOrder.items.map((item: any, index: number) => (\r\n                          <tr key={index} className=\"hover:bg-gray-50\">\r\n                            <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">{item.productName}</td>\r\n                            <td className=\"px-4 py-3 text-sm text-gray-600\">\r\n                              {item.productModel && <div>{item.productModel}</div>}\r\n                              {item.productColor && <div className=\"text-xs text-gray-500\">{item.productColor}</div>}\r\n                            </td>\r\n                            <td className=\"px-4 py-3 text-sm text-right text-gray-900\">{item.quantity}</td>\r\n                            <td className=\"px-4 py-3 text-sm text-right text-gray-900\">${item.price.toFixed(2)}</td>\r\n                            <td className=\"px-4 py-3 text-sm text-right font-medium text-gray-900\">${item.total.toFixed(2)}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Totales */}\r\n                <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Subtotal:</span>\r\n                      <span className=\"font-medium text-gray-900\">${(selectedOrder as any).subtotal?.toFixed(2) || '0.00'}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Envío:</span>\r\n                      <span className=\"font-medium text-gray-900\">${(selectedOrder as any).shippingCost?.toFixed(2) || '0.00'}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between pt-2 border-t border-gray-300\">\r\n                      <span className=\"text-lg font-bold text-gray-900\">Total:</span>\r\n                      <span className=\"text-lg font-bold text-blue-600\">${selectedOrder.total.toFixed(2)} USD</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Botón de WhatsApp */}\r\n                <div className=\"mt-6\">\r\n                  <a\r\n                    href={`https://wa.me/${(selectedOrder as any).customerPhone?.replace(/[^0-9]/g, '')}?text=Hola ${selectedOrder.customerFirstName}, tu orden ${selectedOrder.orderNumber} está siendo procesada.`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"w-full inline-flex items-center justify-center px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z\"/>\r\n                    </svg>\r\n                    Contactar Cliente por WhatsApp\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImprovedAdminDashboard;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport authService from '../services/authService';\r\nimport toast from 'react-hot-toast';\r\nimport ImprovedAdminDashboard from '../components/admin/ImprovedAdminDashboard';\r\n\r\nconst AdminPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const checkAdminAccess = useCallback(async () => {\r\n    try {\r\n      if (!authService.isAuthenticated()) {\r\n        toast.error('Debes iniciar sesión');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      const userData = await authService.getMe();\r\n\r\n      if (userData.role !== 'ADMIN') {\r\n        toast.error('No tienes permisos de administrador');\r\n        navigate('/');\r\n        return;\r\n      }\r\n\r\n      setIsAdmin(true);\r\n    } catch (error) {\r\n      toast.error('Error verificando permisos');\r\n      navigate('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    checkAdminAccess();\r\n  }, [checkAdminAccess]);\r\n\r\n  const handleClose = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  // Usar el token de autenticación normal (no adminToken separado)\r\n  const token = authService.getToken();\r\n\r\n  console.log('🔑 Token para dashboard:', token);\r\n\r\n  return (\r\n    <ImprovedAdminDashboard\r\n      onClose={handleClose}\r\n      adminToken={token || ''}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"names":["API_URL","process","ProductFormModal","_ref2","_product$images","_product$images$","adminToken","product","onClose","onSuccess","formData","setFormData","useState","name","slug","description","basePrice","String","categoryId","compatibility","isFeatured","inStock","isActive","stockCount","submitting","setSubmitting","imageUrl","setImageUrl","imagePreview","setImagePreview","images","url","_jsx","className","children","_jsxs","onClick","onSubmit","async","e","preventDefault","dataToSend","parseFloat","brand","split","model","JSON","stringify","parseInt","console","log","axios","put","concat","id","headers","Authorization","toast","success","_response$data","_response$data$produc","response","post","data","altText","position","isMain","error","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","message","type","required","value","onChange","_objectSpread","target","toLowerCase","replace","rows","step","checked","placeholder","handleImagePreview","handleUnsplashAutomatic","searchTerm","unsplashUrl","encodeURIComponent","fill","viewBox","fillRule","d","clipRule","src","alt","onError","handleRemoveImage","title","stroke","strokeLinecap","strokeLinejoin","strokeWidth","disabled","ProductDetailModal","_ref3","length","map","img","idx","toFixed","variants","category_name","_ref","products","setProducts","loading","setLoading","showCreateModal","setShowCreateModal","editingProduct","setEditingProduct","selectedProduct","setSelectedProduct","useEffect","loadProducts","get","handleToggleFeatured","window","confirm","delete","productId","handleDelete","SuppliersManager","suppliers","setSuppliers","showForm","setShowForm","editingSupplier","setEditingSupplier","selectedSupplier","setSelectedSupplier","showStats","setShowStats","website","averageShippingDays","defaultCommission","defaultShippingCost","contactEmail","contactPhone","token","localStorage","getItem","loadSuppliers","fetch","ok","Error","result","json","handleInputChange","prev","method","body","min","colSpan","supplier","productsCount","ordersCount","stats","viewSupplierStats","handleEdit","activeProducts","pendingOrders","reliability","rating","ProductImporter","categories","setCategories","importedProduct","setImportedProduct","productUrl","setProductUrl","selectedCategory","setSelectedCategory","profitMargin","setProfitMargin","loadCategories","calculateSalePrice","supplierPrice","trim","supplierId","category","max","needsManualReview","index","currentTarget","platform","supplierUrl","shippingTime","calculateProfit","AnalyticsDashboard","setStats","timeRange","setTimeRange","loadStats","formatCurrency","amount","Intl","NumberFormat","style","currency","format","getStatusColor","status","PENDING","CONFIRMED","PROCESSING","SHIPPED","DELIVERED","CANCELLED","range","totalRevenue","revenueToday","totalOrders","toLocaleString","ordersToday","totalCustomers","averageOrderValue","salesByMonth","item","maxRevenue","Math","m","revenue","percentage","month","sales","width","ordersByStatus","reduce","sum","s","count","topProducts","recentOrders","order","orderNumber","customerName","dateString","createdAt","Date","toLocaleDateString","year","day","hour","minute","total","_notes$match","_subtotal","_shippingCost","_customerPhone","activeTab","setActiveTab","orders","setOrders","completedOrders","selectedOrder","setSelectedOrder","fetchOrders","useCallback","ordersData","pending","filter","o","completed","_Fragment","customerFirstName","customerLastName","customerEmail","orderId","newStatus","patch","updateOrderStatus","ProductsManager","customerPhone","shippingAddress","shippingCity","shippingState","shippingPostalCode","shippingCountry","notes","paymentStatus","paymentMethod","includes","match","trackingNumber","trackingUrl","href","rel","items","productName","productModel","productColor","quantity","price","subtotal","shippingCost","AdminPage","navigate","useNavigate","isAdmin","setIsAdmin","checkAdminAccess","authService","isAuthenticated","getMe","role","getToken","ImprovedAdminDashboard","handleClose"],"sourceRoot":""}